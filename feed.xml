<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.2">Jekyll</generator><link href="https://cjbischoff@github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://cjbischoff@github.io/" rel="alternate" type="text/html" /><updated>2018-02-21T02:46:38+00:00</updated><id>https://cjbischoff@github.io/</id><title type="html">Christopher J. Bischoff</title><subtitle>developer. curious. learner</subtitle><entry><title type="html">Centralized Logging for Agility</title><link href="https://cjbischoff@github.io/blog/centralized-logging-for-agility" rel="alternate" type="text/html" title="Centralized Logging for Agility" /><published>2017-07-06T02:36:21+00:00</published><updated>2017-07-06T02:36:21+00:00</updated><id>https://cjbischoff@github.io/blog/centralized-logging-for-agility</id><content type="html" xml:base="https://cjbischoff@github.io/blog/centralized-logging-for-agility">&lt;h1 id=&quot;centralized-logging-of-events-from-systems-to-a-central-point&quot;&gt;Centralized Logging of Events from Systems to a Central Point&lt;/h1&gt;

&lt;p&gt;The overall goal is to centralized critical events (defined specific events) into a centralized solution within the Agility platform. Review/IR can be performed from this centralized solution and will allow for forwarding of events into secondary systems for further review/analysis.&lt;/p&gt;

&lt;h2 id=&quot;centralized-syslog-repositories&quot;&gt;Centralized Syslog Repositories&lt;/h2&gt;

&lt;p&gt;For teams comfortable with using Syslog, modern implementations such as syslog-ng and rsyslog allow for a centralized Syslog repository to accept Syslog entries from other servers.&lt;/p&gt;

&lt;p&gt;Since the entries are centralized, they are aggregated easily and log entry loss is limited in the case of a server shutdown.&lt;/p&gt;

&lt;h2 id=&quot;client-log-shipper&quot;&gt;Client Log Shipper&lt;/h2&gt;

&lt;p&gt;NXLog is one of the most popular Windows log shippers.&lt;/p&gt;

&lt;h2 id=&quot;scaledistributing-syslog-repositories&quot;&gt;Scale/Distributing Syslog Repositories&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt; Need to determine how to scale the centralized repository(s)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- front-end load-balancer
- statically assign customers to specific endpoint
- number of customer/endpoints per repository
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;network-location-of-syslog-repositories&quot;&gt;Network location of Syslog Repositories&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt; Need to determine location of centralized Syslog servers&lt;/p&gt;

&lt;p&gt;Currently for the POC the Syslog server is located in VLAN 3. I will recommend creating a new separate network located off the Cisco Nexus 7000 or maybe as a Customer Tenant network to reduce the amount of impact on infrastructure.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;See the infrastructure impact diagram&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;diagram-of-centralized-syslog-poc&quot;&gt;Diagram of Centralized Syslog POC&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://cloud.githubusercontent.com/assets/126409/22716994/d3529a32-ed55-11e6-958c-0ebedff06f0d.png&quot; alt=&quot;centralized_log_management&quot; height=&quot;1200px&quot; width=&quot;1200px&quot; /&gt;.&lt;/p&gt;

&lt;h3 id=&quot;syslog-server&quot;&gt;Syslog server&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;System Requirements&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;To set up a Linux host as a central log server, we need to create a separate /var partition, and allocate a large enough disk size or create a LVM special volume group. That way, the Syslog server will be able to sustain the exponential growth of collected logs over time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Allow firewall ports from server&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Based upon Centos 7 server&lt;/li&gt;
  &lt;li&gt;Default port number for syslog is 514&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@server ~]# firewall-cmd --permanent --add-port=514/tcp
[root@server ~]# firewall-cmd --permanent --add-port=514/udp
[root@server ~]# firewall-cmd --reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Enable Rsyslog Daemon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;rsyslog daemon comes pre-installed on Centos Linux distributions, but is not enabled by default. To enable rsyslog daemon to receive external messages, edit its configuration file located in /etc/rsyslog.conf.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514

# Provides TCP syslog reception
$ModLoad imtcp
$InputTCPServerRun 514
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that both TCP and UDP can be set on the server simultaneously to listen on TCP/UDP connections.&lt;/p&gt;

&lt;p&gt;Open /etc/rsyslog.conf with a text editor, and append the following template before the GLOBAL DIRECTIVES block. Received messages from remote clients written to a single file named after their IP address, use the following template.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# rsyslog configuration file

# For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html
# If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html


$MaxMessageSize 64k

#### MODULES ####

# The imjournal module bellow is now used as a message source instead of imuxsock.
$ModLoad imuxsock # provides support for local system logging (e.g. via logger command)
$ModLoad imjournal # provides access to the systemd journal
#$ModLoad imklog # reads kernel messages (the same are read from journald)
$ModLoad immark  # provides --MARK-- message capability
$ModLoad imfile

# Provides UDP syslog reception
$ModLoad imudp
$UDPServerRun 514

# Provides TCP syslog reception
$ModLoad imtcp
$InputTCPServerRun 514

# set some access rights to written log files
$FileOwner root
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022

# do NOT escape control chars
$EscapeControlCharactersOnReceive off

# Filter duplicated messages
$RepeatedMsgReduction on

$template DynaFile,&quot;/var/log/remote/%HOSTNAME%.log&quot;
*.* -?DynaFile

*.* @10.16.72.38:514
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Restart the service&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo systemctl restart rsyslog&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Check if process is listening&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo ss -pl | grep rsyslog
udp    UNCONN     0      0       *:syslog                *:*                     users:((&quot;rsyslogd&quot;,pid=18546,fd=3))
udp    UNCONN     0      0      :::syslog               :::*                     users:((&quot;rsyslogd&quot;,pid=18546,fd=4))
tcp    LISTEN     0      25      *:shell                 *:*                     users:((&quot;rsyslogd&quot;,pid=18546,fd=5))
tcp    LISTEN     0      25     :::shell                :::*                     users:((&quot;rsyslogd&quot;,pid=18546,fd=6))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;logrotate&quot;&gt;Logrotate&lt;/h4&gt;

&lt;p&gt;logrotate will rename or compress the main log when a condition is met so that the next event is recorded on an empty file.&lt;/p&gt;

&lt;p&gt;In addition, it will remove “old” log files and will keep the most recent ones.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt; We get to decide what “old” means and how often we want logrotate to clean up the logs for us and what/if a retention period is required&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TODO&lt;/strong&gt; Backup and archival from server&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;what&lt;/li&gt;
  &lt;li&gt;how&lt;/li&gt;
  &lt;li&gt;when&lt;/li&gt;
  &lt;li&gt;how long&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;installing-logrotate-in-linux&quot;&gt;Installing Logrotate in Linux&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[root@server ~]# yum update &amp;amp;&amp;amp; yum install logrotate&lt;/code&gt;&lt;/p&gt;

&lt;h5 id=&quot;options&quot;&gt;Options&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@server ~]# cd /etc/logrotate.d/
[root@server ~]# touch remotelogs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/var/log/remote/*/messages.log
{
    daily
    copytruncate
    rotate 5
    size 10M
    compress
    dateext
    dateformat -%Y-%m-%d
    missingok
    sharedscripts
    postrotate
    /bin/kill -HUP `cat /var/run/syslogd.pid 2&amp;gt; /dev/null` 2&amp;gt; /dev/null || true
    endscript
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The first line indicates that the directives inside the block apply to all directories within /var/log/remote/ with the specific file:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;weekly means that the tool will attempt to rotate the logs on a weekly basis. Other possible values are daily and monthly.&lt;/li&gt;
  &lt;li&gt;rotate 3 indicates that only 3 rotated logs should be kept. Thus, the oldest file will be removed on the fourth subsequent run.&lt;/li&gt;
  &lt;li&gt;size=10M sets the minimum size for the rotation to take place to 10M. In other words, each log will not be rotated until it reaches 10MB.&lt;/li&gt;
  &lt;li&gt;compress and delaycompress are used to tell that all rotated logs, with the exception of the most recent one, should be compressed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Perform a dry-run&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Use the -d option followed by the configuration file (you can actually run logrotate by omitting this option):&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;[root@server ~]# logrotate -d /etc/logrotate.d/remotelogs.conf&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;collecting-logs-from-a-windows-system&quot;&gt;Collecting Logs from a Windows System&lt;/h3&gt;

&lt;p&gt;This topic provides procedures for installing NXLog:&lt;/p&gt;

&lt;h4 id=&quot;installing-nxlog&quot;&gt;Installing NXLog&lt;/h4&gt;

&lt;h5 id=&quot;nxlog-generic-server-configuration&quot;&gt;NXLog (generic server configuration)&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Download the newest stable NXLog-community version of NXLog, available at &lt;a href=&quot;http://nxlog.co/products/NXLog-community-edition/download&quot;&gt;http://nxlog.co/products/NXLog-community-edition/download&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Follow the instructions to install the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; For security, make a backup copy of C:\Program Files (x86)\nxlog\conf\nxlog.conf, and give it another name. (You can delete it later.)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Delete the contents in the new copy of nxlog.conf and replace it with the following:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;define ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

&amp;lt;Extension json&amp;gt;
Module xm_json
&amp;lt;/Extension&amp;gt;

&amp;lt;Extension syslog&amp;gt;
Module xm_syslog
&amp;lt;/Extension&amp;gt;

&amp;lt;Input internal&amp;gt;
Module im_internal
Exec $EventReceivedTime = integer($EventReceivedTime) / 1000000; to_json();
&amp;lt;/Input&amp;gt;

&amp;lt;Input eventlog&amp;gt;
Module im_msvistalog
SavePos FALSE
ReadFromLast FALSE
Query &amp;lt;QueryList&amp;gt;\
&amp;lt;Query Id=&quot;0&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4740 or EventID=4728 or EventID=4732 or EventID=4756 or EventID=4735 or EventID=4628)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Security-Audit-Configuration-Client/Operational&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4740 or EventID=4728 or EventID=4732 or EventID=4756 or EventID=4735 or EventID=4628)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[Provider[@Name='LsaSrv'] and (EventID=40960)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;1&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=1000 or EventID=1002 or EventID=1001 or EventID=1 or EventID=2)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=1000 or EventID=1002 or EventID=1001 or EventID=1 or EventID=2)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[Provider[@Name='.NET Runtime'] and (EventID=1026)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;2&quot; Path=&quot;Microsoft-Windows-AppLocker/EXE and DLL&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-AppLocker/EXE and DLL&quot;&amp;gt;*[System[(EventID=8004 or EventID=8003 or EventID=8006 or EventID=8007)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-AppLocker/MSI and Script&quot;&amp;gt;*[System[(EventID=8004 or EventID=8003 or EventID=8006 or EventID=8007)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;3&quot; Path=&quot;Security&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=104 or EventID=1102)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=104 or EventID=1102)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Setup&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;4&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(EventID=43 or EventID=400)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;5&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=5038 or EventID=6281 or EventID=3001 or EventID=3002 or EventID=3003 or EventID=3004 or EventID=3010 or EventID=3023 or EventID=219)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-CodeIntegrity/Operational&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=5038 or EventID=6281 or EventID=3001 or EventID=3002 or EventID=3003 or EventID=3004 or EventID=3010 or EventID=3023 or EventID=219)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;6&quot; Path=&quot;Security&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4624 or EventID=4625)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-NTLM/Operational&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4624 or EventID=4625)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;7&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;8&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Application-Experience/Program-Inventory&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;9&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Sysmon/Operational&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;10&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2) and (EventID=7000 or EventID=7011 or EventID=7022 or EventID=7023 or EventID=7024 or EventID=7026 or EventID=7030 or EventID=7031 or EventID=7032 or EventID=7034 or EventID=7043)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;/QueryList&amp;gt;
&amp;lt;/Input&amp;gt;

&amp;lt;Output out&amp;gt;
Module om_udp
Host [SYSLOG SERVER IP]
Port 514
Exec $EventTime = strftime($EventTime, '%Y-%m-%d %H:%M:%S, %z');
Exec $Message = to_json(); to_syslog_bsd();
&amp;lt;/Output&amp;gt;

&amp;lt;Route 1&amp;gt;
Path eventlog, internal, IIS_Logs =&amp;gt; out
&amp;lt;/Routedefine ROOT C:\Program Files (x86)\nxlog

Moduledir %ROOT%\modules
CacheDir %ROOT%\data
Pidfile %ROOT%\data\nxlog.pid
SpoolDir %ROOT%\data
LogFile %ROOT%\data\nxlog.log

&amp;lt;Extension json&amp;gt;
Module xm_json
&amp;lt;/Extension&amp;gt;

&amp;lt;Extension syslog&amp;gt;
Module xm_syslog
&amp;lt;/Extension&amp;gt;

&amp;lt;Input internal&amp;gt;
Module im_internal
Exec $EventReceivedTime = integer($EventReceivedTime) / 1000000; to_json();
&amp;lt;/Input&amp;gt;

&amp;lt;Input eventlog&amp;gt;
Module im_msvistalog
SavePos FALSE
ReadFromLast FALSE
Query &amp;lt;QueryList&amp;gt;\
&amp;lt;Query Id=&quot;0&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4740 or EventID=4728 or EventID=4732 or EventID=4756 or EventID=4735 or EventID=4628)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Security-Audit-Configuration-Client/Operational&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4740 or EventID=4728 or EventID=4732 or EventID=4756 or EventID=4735 or EventID=4628)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[Provider[@Name='LsaSrv'] and (EventID=40960)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;1&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=1000 or EventID=1002 or EventID=1001 or EventID=1 or EventID=2)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=1000 or EventID=1002 or EventID=1001 or EventID=1 or EventID=2)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[Provider[@Name='.NET Runtime'] and (EventID=1026)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;3&quot; Path=&quot;Security&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=104 or EventID=1102)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=104 or EventID=1102)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Setup&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[Provider[@Name='Microsoft-Windows-Eventlog'] and (Level=4 or Level=0) and (EventID=6005)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;4&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(EventID=43 or EventID=400)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;5&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=5038 or EventID=6281 or EventID=3001 or EventID=3002 or EventID=3003 or EventID=3004 or EventID=3010 or EventID=3023 or EventID=219)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-CodeIntegrity/Operational&quot;&amp;gt;*[System[(Level=2 or Level=3 or Level=4 or Level=0) and (EventID=5038 or EventID=6281 or EventID=3001 or EventID=3002 or EventID=3003 or EventID=3004 or EventID=3010 or EventID=3023 or EventID=219)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;6&quot; Path=&quot;Security&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4624 or EventID=4625)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-NTLM/Operational&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=4624 or EventID=4625)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;7&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=1  or Level=2 or Level=3 or Level=4 or Level=0 or Level=5) and (EventID=64004 or EventID=4688 or EventID=4697 or EventID=4698 or EventID=4657 or EventID=7035 or EventID=7036 or EventID=7040)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;8&quot; Path=&quot;Application&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Application-Experience/Program-Inventory&quot;&amp;gt;*[System[(Level=4 or Level=0) and (EventID=6 or EventID=7045 or EventID=1022 or EventID=1033 or EventID=903 or EventID=904 or EventID=905 or EventID=906 or EventID=907 or EventID=908)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;Query Id=&quot;10&quot; Path=&quot;System&quot;&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*[System[(Level=2) and (EventID=7000 or EventID=7011 or EventID=7022 or EventID=7023 or EventID=7024 or EventID=7026 or EventID=7030 or EventID=7031 or EventID=7032 or EventID=7034 or EventID=7043)]]&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;/QueryList&amp;gt;
&amp;lt;/Input&amp;gt;

&amp;lt;Output syslog_server&amp;gt;
Module om_tcp
Host 10.2.0.250
Port 514
Exec to_syslog_snare();
&amp;lt;/Output&amp;gt;

&amp;lt;Route 1&amp;gt;
Path eventlog, internal =&amp;gt; syslog_server
&amp;lt;/Route&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Replace [SYSLOG SERVER IP] with the IP address of the syslog server&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Save the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; Open Windows Services and restart the NXLog service.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;8.&lt;/strong&gt; SSH into syslog servers can check /var/log - the source IP address of the client&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note: If you need to debug NXLog, open C:\Program Files (x86)\nxlog\data\nxlog.log.&lt;/strong&gt;&lt;/p&gt;

&lt;h4 id=&quot;optional-collecting-logs-from-a-windows-system-iis&quot;&gt;(OPTIONAL) Collecting Logs from a Windows System IIS&lt;/h4&gt;

&lt;h4 id=&quot;optional-installing-sysmon--collecting-logs&quot;&gt;(OPTIONAL) Installing Sysmon &amp;amp; Collecting Logs&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;(OPTIONAL)&lt;/strong&gt; Sysmon is an advanced data collection service that monitors in the background on Windows, recording security-related events for use in intrusion detection and forensics.&lt;/p&gt;

&lt;p&gt;Sysmon is a free &lt;a href=&quot;https://technet.microsoft.com/en-us/sysinternals/bb545021.aspx&quot;&gt;Windows Sysinternals&lt;/a&gt; tool from Sysinternals/Microsoft.&lt;/p&gt;

&lt;p&gt;After installation and configuration on a system, Sysmon acts as a Windows service to log any system activity to the Windows event log. NXLog collects this audit log data and forwards it to USM Anywhere over the Syslog protocol on UDP port 514.&lt;/p&gt;

&lt;p&gt;On Microsoft’s Windows Vista and more recent Windows operating system versions, events are stored in Applications and Services !Logs/Microsoft/Windows/Sysmon/Operational.&lt;/p&gt;

&lt;p&gt;On older operating systems, Windows writes events to the System event log.&lt;/p&gt;

&lt;h5 id=&quot;to-install-sysmon&quot;&gt;To install Sysmon&lt;/h5&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; Download the &lt;a href=&quot;https://download.sysinternals.com/files/Sysmon.zip&quot;&gt;Sysmon ZIP&lt;/a&gt; file and unzip it in the target system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Save the unzipped configuration file (shown) in a folder with the name sysmon_config.xml.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Sysmon schemaversion=&quot;3.10&quot;&amp;gt;
&amp;lt;HashAlgorithms&amp;gt;md5&amp;lt;/HashAlgorithms&amp;gt;
&amp;lt;EventFiltering&amp;gt;
&amp;lt;!-- Do not log process termination --&amp;gt;
&amp;lt;ProcessTerminate onmatch=&quot;include&quot;/&amp;gt;
&amp;lt;!-- Exclude connection to Amazon metadata --&amp;gt;
&amp;lt;NetworkConnect onmatch=&quot;exclude&quot;&amp;gt;
&amp;lt;DestinationIp&amp;gt;169.254.169.254&amp;lt;/DestinationIp&amp;gt;
&amp;lt;/NetworkConnect&amp;gt;
&amp;lt;!-- Exclude ImageLoad with signed files --&amp;gt;
&amp;lt;ImageLoad onmatch=&quot;exclude&quot;&amp;gt;
&amp;lt;Signed&amp;gt;true&amp;lt;/Signed&amp;gt;
&amp;lt;/ImageLoad&amp;gt;
&amp;lt;RawAccessRead onmatch=&quot;include&quot;/&amp;gt;
&amp;lt;/EventFiltering&amp;gt;
&amp;lt;/Sysmon&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This is my recommend/tested use of this configuration file to drastically reduce the number of events recorded at the host level, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Process termination.&lt;/li&gt;
  &lt;li&gt;Connection to 169.254.169.254&lt;/li&gt;
  &lt;li&gt;ImageLoad events that are valid signed files.&lt;/li&gt;
  &lt;li&gt;RawAccessRead events (very noisy).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; Install Sysmon in the Windows system and execute the following command:&lt;code class=&quot;highlighter-rouge&quot;&gt;sysmon.exe -accepteula -h md5 -n -l -i sysmon_config.xml&lt;/code&gt; Sysmon starts logging the information to the Windows Event Log.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Edit the NXLog configuration file under under EventLog &amp;gt; Querylist.&lt;/p&gt;

&lt;p&gt;Look for the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Input eventlog&amp;gt;&lt;/code&gt; tag and add the line:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;Select Path=&quot;Microsoft-Windows-Sysmon/Operational&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;See below:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Input eventlog&amp;gt;
Module im_msvistalog
Query &amp;lt;QueryList&amp;gt;\
&amp;lt;Query Id=&quot;0&quot;&amp;gt;\
&amp;lt;Select Path=&quot;Application&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;System&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Security&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\
&amp;lt;Select Path=&quot;Microsoft-Windows-Sysmon/Operational&quot;&amp;gt;*&amp;lt;/Select&amp;gt;\
&amp;lt;/Query&amp;gt;\
&amp;lt;/QueryList&amp;gt;
&amp;lt;/Input&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt;Save the file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Apply the last configuration by opening Windows Services and restarting NXLog.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7.&lt;/strong&gt; SSH into syslog servers can check /var/log - goto the source directory (ip address) and review the logs to confirm&lt;/p&gt;

&lt;h4 id=&quot;optional-microsoft-windows-dns-server&quot;&gt;(OPTIONAL) Microsoft Windows DNS Server&lt;/h4&gt;

&lt;p&gt;These tasks are subtasks of Collecting Logs from a Windows System. They enable a Windows DNS server to send log data to a syslog server&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Device&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Details&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Device Vendor&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Microsoft&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Device Type&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Server&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Transport Type&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Syslog&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Links&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.microsoft.com/en-US/download/details.aspx?id=53314&quot;&gt;https://www.microsoft.com/en-US/download/details.aspx?id=53314&lt;/a&gt; and Collecting Logs from a Windows System.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;strong&gt;Integration Prerequisites&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IP Address of the syslog server&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;integrating-microsoft-windows-dns-server&quot;&gt;Integrating Microsoft Windows DNS Server&lt;/h5&gt;

&lt;p&gt;Here are some best practices:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When you set the debug logging options, select log packets for debugging. You may want to adjust these selections for performance.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The most useful debug logging output comes from selecting at least three options:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;One option under Packet direction&lt;/li&gt;
      &lt;li&gt;One option under Transport protocol&lt;/li&gt;
      &lt;li&gt;At least one more option in another category&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In addition to selecting events for the DNS debug log file, you can specify the file name, location, and a maximum file size for the file. However, in most cases, the default selections are adequate.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Consider limiting the traffic captured by logging between your server and the DNS server.&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Select Filter packets by IP address.&lt;/li&gt;
      &lt;li&gt;Add the appropriate IP addresses by clicking Filter.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;enabling-windows-dns-debug-logging&quot;&gt;Enabling Windows DNS Debug Logging&lt;/h5&gt;

&lt;p&gt;To enable Windows DNS debug logging&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.&lt;/strong&gt; From the Windows Start Menu, select All Programs &amp;gt; Administrative Tools.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.&lt;/strong&gt; Select DNS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.&lt;/strong&gt; From the console tree, right-click the applicable DNS server; then click Properties.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4.&lt;/strong&gt; Click the Debug Logging tab.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5.&lt;/strong&gt; Select log packets for debugging, then select the events that you want the DNS server to record for debug logging.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;6.&lt;/strong&gt; Add the following lines to the NXLog configuration file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;Input DNS_Logs&amp;gt;
Module im_file
File &quot;C:\\Windows\\Sysnative\\dns\\dns.log&quot;
SavePos TRUE
InputType LineBased

Exec if $raw_event =~ /^#/ drop(); \
else \
{ \
$Message = $raw_event: \
$SourceName = &quot;DNS&quot;; \
$raw_event = to_json(); \
}
&amp;lt;/Input&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;setting-up-windows-event-collection-forwarding&quot;&gt;Setting Up Windows Event Collection Forwarding&lt;/h5&gt;

&lt;p&gt;If you plan to implement Windows Event Collection and Forwarding (WEF) to collect Windows logs, add the following line in the collector’s NXLog configuration file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Nxlog conf
&amp;lt;Select Path=&quot;ForwardedEvents&quot;&amp;gt;*&amp;lt;/Select&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Centralized Logging of Events from Systems to a Central Point</summary></entry><entry><title type="html">AV vs Sandbox</title><link href="https://cjbischoff@github.io/blog/av-vs-sandbox" rel="alternate" type="text/html" title="AV vs Sandbox" /><published>2017-01-16T00:00:00+00:00</published><updated>2017-01-16T00:00:00+00:00</updated><id>https://cjbischoff@github.io/blog/av-vs-sandbox</id><content type="html" xml:base="https://cjbischoff@github.io/blog/av-vs-sandbox">&lt;h1 id=&quot;anti-virus-vs-sandbox-technology&quot;&gt;Anti-Virus vs. Sandbox Technology&lt;/h1&gt;

&lt;h2 id=&quot;anti-virus-vs-sandbox-technology-1&quot;&gt;Anti-Virus vs. Sandbox Technology&lt;/h2&gt;

&lt;p&gt;AntiVirus (AV) software operates based on the idea that you can decide what is bad, detect which programs do bad things, and kill/uninstall them. Reactive security systems like AV software require very good knowledge about the threats you’re facing, or about the difference between malicious and normal behaviour. That makes them costly and imprecise.&lt;/p&gt;

&lt;p&gt;Sandboxes operate on the idea that you cannot decide what is good or bad, but the user can decide what they choose to trust. They provide you with the ability to confine or isolate specific programs so that if they do bad things, it doesn’t do any harm to things outside the sandbox. The downside of confinement systems is that there must be a logical and simple way for the system or for its users of deciding which programs get confined where, and which are also to talk to each other.&lt;/p&gt;

&lt;p&gt;A sandbox is basically a context in which a piece of software can be run isolated from the rest of the world. Java applets running in a browser is a classic example, as should be Flash (though it is apparently not nearly as well isolated and safe as would be ideal): These are contexts where programs can run without having access to resources on the host machine (your PC), such as your file system, etc.&lt;/p&gt;

&lt;h2 id=&quot;sentinelone-s1-endpoint-protection-platform&quot;&gt;SentinelOne (S1) Endpoint Protection Platform&lt;/h2&gt;

&lt;p&gt;SentinelOne Endpoint Protection Platform provides a multi-layered approach for detecting malware, exploit and script-based attacks using a combination of machine learning coupled with both static analysis and system-wide behaviour monitoring to isolate and mitigate threats in real time. The management system, which can be deployed either in the cloud or on-premise, provides forensic analysis of threats and allows administrators to quickly resolve attacks through automated remediation and rollback features.&lt;/p&gt;

&lt;p&gt;SentinelOne uses Dynamic Behavioral Tracking, that runs realtime, on the endpoint and utilizes advanced machine learning to detect behavioral patterns as application and code is executing on the device. Done across Windows, Mac and Linux with their own proprietary, patent pending technology. Works on devices even completely OFFLINE, and is an autonomous module, that can detect, mitigate and remediate threats in real time. No connection to the cloud needed, no hashes, no signatures.&lt;/p&gt;

&lt;p&gt;SentinelOne has “Cloud Intelligence”, which is in essence a way of crowdsourcing information between all of the intelligence gathered, either from their client base (if they opt-in), and/or from third party reputation feeds, VT included. It is NOT part of their detection engine, and its entire purpose is to validate hashes, out of band, regardless of our Dynamic Behavioral Tracking engine.&lt;/p&gt;

&lt;p&gt;SentinelOne is NOT a scan engine. It doesn’t scan files or check for signatures. It monitors code execution on a live system – VERY different than a scan engine.&lt;/p&gt;

&lt;h3 id=&quot;sentinelone-s1-specifics&quot;&gt;SentinelOne (S1) Specifics&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;High-Level Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learning mode – establishes a baseline of legitimate applications running on endpoints to minimize false positives.&lt;/li&gt;
  &lt;li&gt;Cloud intelligence – proactively blocks known threats by leveraging cloud intelligence and select reputation services.&lt;/li&gt;
  &lt;li&gt;Auto immune – instantly shares new threat intelligence across endpoints to prevent lateral movement and further infection.&lt;/li&gt;
  &lt;li&gt;Anti-exploitation detect and prevent application and memory-based exploits based on the techniques themselves without relying on static measures.&lt;/li&gt;
  &lt;li&gt;Dynamic execution inspection – continuously monitors and tracks activity on endpoints to analyze behavior and detect unknown threats.&lt;/li&gt;
  &lt;li&gt;Automated mitigation – fully automates remediation and threat removal, including killing processes, and quarantining threats or endpoints.&lt;/li&gt;
  &lt;li&gt;Remediation – recovers deleted files or restores modified files back to their state prior to malware execution, effectively reversing any malware-driven modifications. &amp;lt;— can restore files encrypted by ransomware.&lt;/li&gt;
  &lt;li&gt;Endpoint forensics – graphical reports generated during attacks deliver sandbox equivalent investigative capabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Blocks known in-the-wild threats by leveraging up to the minute cloud intelligence and select reputation services to proactively block threats before they can execute on endpoints.  Think Wild Fire - solution that uses Threat Intelligence data from various sources to provide more update to date reputation to IP address and files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Prevents attacks that use memory and application exploits by detecting their execution techniques (e.g., heap spraying, stack pivots, ROP attacks, and memory permission modifications.  Provides kernel level protection to prevent privilege escalation via exploits.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stops targeted and zero day attacks using real-time execution monitoring and analysis to assemble true behavioral context without the need for static measures. SentinelOne performs monitoring and analysis of application and process behaviors at low-level instrumentation of OS activities and operations, including memory, disk, registry and network&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Beyond just detection, manual or fully automated mitigation options can be configured via policy and include various actions such as: killing malicious processes, quarantining threats or isolating infected machines.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sentinelone-s1-performance&quot;&gt;SentinelOne (S1) Performance&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CPU = 2%&lt;/li&gt;
  &lt;li&gt;Memory = 300mb of ram&lt;/li&gt;
  &lt;li&gt;Footprint = 800mb of storage (assuming full logs are enabled)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sentinelone-s1-guarantee&quot;&gt;SentinelOne (S1) Guarantee&lt;/h3&gt;

&lt;p&gt;SentinelOne also is offering to pay a victim’s ransom if its endpoint security product should fail to block the initial infection or effect-related remediation.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://sentinelone.com/wp-content/uploads/2016/07/Brochure-Ransomware-Vertical-Online.pdf&quot;&gt;Protection Against Ransomware Guaranteed&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SentinelOne’s program offers to reimburse customers up to $1,000 per infected endpoint, or up to $1 million in total. But there are many conditions, and the guarantee isn’t free.&lt;/p&gt;

&lt;p&gt;Clients will pay a surcharge of between 5 to 10 percent of the per-seat cost of their SentinelOne license, which varies according to the vagaries of software license subscription negotiations.&lt;/p&gt;

&lt;p&gt;The SentinelOne guarantee is also contingent on customers configuring their software and computers in certain ways. For example, organizations must have Windows Volume Shadow Copy Service enabled, which allows machines to be rolled back and restored.&lt;/p&gt;

&lt;h3 id=&quot;sentinelone-s1-costing&quot;&gt;SentinelOne (S1) Costing&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;about $45 per endpoint @3500 endpoints per year&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sentinelone-s1-review-vs-cylance&quot;&gt;SentinelOne (S1) Review vs. Cylance&lt;/h3&gt;

&lt;p&gt;I have heavily reviewed Cylance and SentinelOne; I preferred SentinelOne for their builtin, one button or automatic, isolation and remediation along with their visual kill chain capability.&lt;/p&gt;

&lt;p&gt;Also with the recent RIFFS ands news about fake testing; unknown about the future; also they are actually more expensive.&lt;/p&gt;

&lt;p&gt;Currently ISRM is performing a bake-up; which includes  SentinelOne (S1), but their requirements are greatly differ.  They are looking for malware and forensics; which is really wide and no single product will provide that coverage.  They are looking at 2 other platforms that focus more on the forensic side.&lt;/p&gt;

&lt;h1 id=&quot;executive-summary&quot;&gt;Executive Summary&lt;/h1&gt;

&lt;h2 id=&quot;current-solution&quot;&gt;Current Solution&lt;/h2&gt;

&lt;p&gt;EIS is currently using McAfee Endpoint Security Threat Prevention for Malware control using McAfee ePO in the Cloud.  The decision to go with this direction was based upon leveraging ISRM licensing model (all-you-can-eat free of charge) utilization the option of management in cloud to minimize CAPEX cost for servers and licensing and to minimize operations impact.&lt;/p&gt;

&lt;p&gt;The solution was deployed per McAfee’s and Microsoft “best practices” to minimize application/system impact.  Additional consideration was included for application SME to further ensure minimal risk to the application(s).&lt;/p&gt;

&lt;h2 id=&quot;current-challenges&quot;&gt;Current Challenges&lt;/h2&gt;

&lt;p&gt;McAfee Endpoint Security Threat Prevention solution has been severely impacting production systems/applications. EIS has actively worked with McAfee - following their processes - performing updates without any resolution.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;High CPU and memory usage on multiple servers due to McAfee services&lt;/li&gt;
  &lt;li&gt;Exclusion policies are not getting applied to the servers due to character limitation with ENS 10.5.0&lt;/li&gt;
  &lt;li&gt;ENS 10.5.x is not compatible with single core CPU, there are 184 servers managed by EIS with single CPU, cannot upgrade AV module to latest version.&lt;/li&gt;
  &lt;li&gt;Recommendations from McAfee’s engineers for most of the reported issues were to wait and upgrade to next version which is not acceptable.&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;go-forward-strategy&quot;&gt;Go Forward Strategy&lt;/h2&gt;

&lt;p&gt;The current strategy is to move away from traditional anti-malware/anti-virus deployments i.e scan engines and move forward into sandbox based solutions.&lt;/p&gt;

&lt;p&gt;AntiVirus (AV) software operates based on the idea that you can decide what is bad, detect which programs do bad things, and kill/uninstall them. Reactive security systems like AV software require very good knowledge about the threats you’re facing, or about the difference between malicious and normal behaviour. That makes them costly and imprecise.&lt;/p&gt;

&lt;p&gt;Sandboxes operate on the idea that you cannot decide what is good or bad, but the user can decide what they choose to trust. They provide you with the ability to confine or isolate specific programs so that if they do bad things, it doesn’t do any harm to things outside the sandbox. The downside of confinement systems is that there must be a logical and simple way for the system or for its users of deciding which programs get confined where, and which are also to talk to each other.&lt;/p&gt;

&lt;p&gt;A sandbox is basically a context in which a piece of software can be run isolated from the rest of the world. Java applets running in a browser is a classic example, as should be Flash (though it is apparently not nearly as well isolated and safe as would be ideal): These are contexts where programs can run without having access to resources on the host machine (your PC), such as your file system, etc.&lt;/p&gt;

&lt;h3 id=&quot;vendor-choice&quot;&gt;Vendor Choice&lt;/h3&gt;

&lt;p&gt;We will reviewing SentinelOne Endpoint Protection Platform as our primary choice as this aligns with our current needs and with the current evaluation ISRM is performing.&lt;/p&gt;

&lt;p&gt;SentinelOne Endpoint Protection Platform provides a multi-layered approach for detecting malware, exploit and script-based attacks using a combination of machine learning coupled with both static analysis and system-wide behaviour monitoring to isolate and mitigate threats in real time. The management system, which can be deployed either in the cloud or on-premise, provides forensic analysis of threats and allows administrators to quickly resolve attacks through automated remediation and rollback features.&lt;/p&gt;

&lt;p&gt;SentinelOne uses Dynamic Behavioral Tracking, that runs realtime, on the endpoint and utilizes advanced machine learning to detect behavioral patterns as application and code is executing on the device. Done across Windows, Mac and Linux with their own proprietary, patent pending technology. Works on devices even completely OFFLINE, and is an autonomous module, that can detect, mitigate and remediate threats in real time. No connection to the cloud needed, no hashes, no signatures.&lt;/p&gt;

&lt;p&gt;SentinelOne has “Cloud Intelligence”, which is in essence a way of crowdsourcing information between all of the intelligence gathered, either from their client base (if they opt-in), and/or from third party reputation feeds, VT included. It is NOT part of their detection engine, and its entire purpose is to validate hashes, out of band, regardless of our Dynamic Behavioral Tracking engine.&lt;/p&gt;

&lt;p&gt;SentinelOne is NOT a scan engine. It doesn’t scan files or check for signatures. It monitors code execution on a live system – VERY different than a scan engine.&lt;/p&gt;

&lt;h3 id=&quot;benefits&quot;&gt;Benefits&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;High-Level Features&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Learning mode – establishes a baseline of legitimate applications running on endpoints to minimize false positives.&lt;/li&gt;
  &lt;li&gt;Cloud intelligence – proactively blocks known threats by leveraging cloud intelligence and select reputation services.&lt;/li&gt;
  &lt;li&gt;Auto immune – instantly shares new threat intelligence across endpoints to prevent lateral movement and further infection.&lt;/li&gt;
  &lt;li&gt;Anti-exploitation detect and prevent application and memory-based exploits based on the techniques themselves without relying on static measures.&lt;/li&gt;
  &lt;li&gt;Dynamic execution inspection – continuously monitors and tracks activity on endpoints to analyze behavior and detect unknown threats.&lt;/li&gt;
  &lt;li&gt;Automated mitigation – fully automates remediation and threat removal, including killing processes, and quarantining threats or endpoints.&lt;/li&gt;
  &lt;li&gt;Remediation – recovers deleted files or restores modified files back to their state prior to malware execution, effectively reversing any malware-driven modifications. &amp;lt;— can restore files encrypted by ransomware.&lt;/li&gt;
  &lt;li&gt;Endpoint forensics – graphical reports generated during attacks deliver sandbox equivalent investigative capabilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Blocks known in-the-wild threats by leveraging up to the minute cloud intelligence and select reputation services to proactively block threats before they can execute on endpoints.  Think Wild Fire - solution that uses Threat Intelligence data from various sources to provide more update to date reputation to IP address and files.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Prevents attacks that use memory and application exploits by detecting their execution techniques (e.g., heap spraying, stack pivots, ROP attacks, and memory permission modifications.  Provides kernel level protection to prevent privileged escalation via exploits.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Stops targeted and zero day attacks using real-time execution monitoring and analysis to assemble true behavioral context without the need for static measures. SentinelOne performs monitoring and analysis of application and process behaviors at low-level instrumentation of OS activities and operations, including memory, disk, registry and network&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Beyond just detection, manual or fully automated mitigation options can be configured via policy and include various actions such as: killing malicious processes, quarantining threats or isolating infected machines.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sentinelone-s1-performance-1&quot;&gt;SentinelOne (S1) Performance&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;CPU = 2%&lt;/li&gt;
  &lt;li&gt;Memory = 300mb of ram&lt;/li&gt;
  &lt;li&gt;Footprint = 800mb of storage (assuming full logs are enabled)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;costsadd-notes&quot;&gt;Costs(Add Notes)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Retail $45 per endpoint @3500 endpoints per year&lt;/li&gt;
  &lt;li&gt;I have seen 15-17 per endpoint for larger numbers and 3 year term&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;next-stepsadd-notes&quot;&gt;Next Steps(Add Notes)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;We are engaging the vendor for a hands-on review&lt;/li&gt;
  &lt;li&gt;Waiting for ISRM’s review&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;time-line&quot;&gt;Time-line&lt;/h2&gt;</content><author><name></name></author><category term="mck" /><summary type="html">Anti-Virus vs. Sandbox Technology</summary></entry></feed>